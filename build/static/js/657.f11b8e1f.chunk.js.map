{"version":3,"file":"static/js/657.f11b8e1f.chunk.js","mappings":"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","sources":["components/signup-form/style.tsx","components/signup-form/index.tsx","containers/signup/style.tsx","containers/signup/index.tsx","pages/classic-plus/signup.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport styled, { themeGet } from '@sieloapp/shared/styled';\n\nexport const StyledWrap = styled.div`\n  width: 100%;\n  padding-top: 20px;\n`;\n\nexport const StyledTitle = styled.h3`\n  color: ${themeGet('colors.text')};\n  margin-bottom: 5px;\n`;\n\nexport const StyledDesc = styled.p`\n  font-size: 16px;\n  color: ${themeGet('colors.text3')};\n  margin-bottom: 40px;\n`;\n\nexport const StyledLabelWrap = styled.div`\n  margin-bottom: 5px;\n  justify-content: space-between;\n  display: flex;\n`;\n\nexport const StyledDivider = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  text-transform: uppercase;\n  color: ${themeGet('colors.text3')};\n  font-size: 10px;\n  font-weight: 500;\n  font-family: ${themeGet('fonts.interui')};\n  letter-spacing: 0.5px;\n  margin: 15px 0;\n  &:after,\n  &:before {\n    content: '';\n    display: block;\n    flex: 1;\n    height: 1px;\n    background-color: ${themeGet('colors.light')};\n  }\n  &:before {\n    margin-right: 10px;\n  }\n  &:after {\n    margin-left: 10px;\n  }\n`;\n\nexport const StyledBottomText = styled.div`\n  margin-top: 20px;\n  text-align: center;\n  font-size: 13px;\n`;\n\nexport const StyledSmallText = styled.div`\n  font-size: 13px;\n  color: ${themeGet('colors.text3')};\n`;\n","import {\n  Label,\n  FormGroup,\n  Input,\n  Button,\n  Text,\n  Alert,\n  Spinner,\n} from '@sieloapp/components';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { hasKey } from '@sieloapp/shared/methods';\nimport { StyledWrap, StyledTitle, StyledDesc, StyledSmallText } from './style';\n// AWS Amplify\nimport { Auth } from 'aws-amplify';\nimport { StyledRedirect } from '../signin-form/style';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { GoogleReCaptchaProvider } from 'react-google-recaptcha-v3';\nimport { useDispatch } from 'react-redux';\nimport { toggleUser } from '../../../src/redux/slices/user';\nimport xorCipher from '../../../src/helpers/crypt';\n\ninterface IFormValues {\n  email: string;\n  password: string;\n  first_name: string;\n  last_name: string;\n}\n\nconst SignupForm = () => {\n  const userPoolAWS = process.env.REACT_APP_COGNITO_USER_POOL_ID as string;\n  const clientIdAWS = process.env.REACT_APP_COGNITO_CLIENT_ID as string;\n  const recaptchakey = process.env.REACT_APP_RECAPTCHA_SITE_KEY as string;\n  const [msg, setMessage] = useState('');\n  const [signingUp, setsigningUp] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<IFormValues>();\n\n  const onSubmit: SubmitHandler<IFormValues> = async (data) => {\n    setsigningUp(true);\n    try {\n      console.log('==================onSubmit===================');\n      const signUpResponse = await Auth.signUp({\n        username: data.email,\n        password: data.password,\n        attributes: {\n          email: data.email,\n          name: data.first_name,\n          family_name: data.last_name,\n        },\n      });\n      setsigningUp(false);\n      dispatch(\n        toggleUser({\n          userName: data.email,\n          email: data.email,\n          firstName: data.first_name,\n          lastName: data.last_name,\n          role: 'user',\n          token: signUpResponse.userSub,\n          company: undefined,\n          verified: signUpResponse.userConfirmed,\n          clientId: clientIdAWS,\n          userPoolId: userPoolAWS,\n          password: xorCipher(data.password),\n        }),\n      );\n      navigate('/verify-account');\n    } catch (error) {\n      setsigningUp(false);\n      const typedError = error as Error;\n      setMessage(typedError.message);\n    }\n  };\n\n  return (\n    <StyledWrap>\n      <StyledTitle>Create New Account</StyledTitle>\n      <StyledDesc>It&apos;s free to signup and only takes a minute.</StyledDesc>\n      {msg !== '' && <Alert color={'danger'}>{msg}</Alert>}\n      <form action=\"#\" onSubmit={handleSubmit(onSubmit)} noValidate>\n        <FormGroup mb=\"20px\">\n          <Label display=\"block\" mb=\"5px\" htmlFor=\"email\">\n            Email address\n          </Label>\n          <Input\n            id=\"email\"\n            type=\"email\"\n            placeholder=\"Enter your email address\"\n            feedbackText={errors?.email?.message}\n            state={hasKey(errors, 'email') ? 'error' : 'success'}\n            showState={!!hasKey(errors, 'email')}\n            {...register('email', {\n              required: 'Email is required',\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                message: 'invalid email address',\n              },\n            })}\n          />\n        </FormGroup>\n        <FormGroup mb=\"20px\">\n          <Label display=\"block\" mb=\"5px\" htmlFor=\"password\">\n            Password\n          </Label>\n          <Input\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"Enter your password\"\n            feedbackText={errors?.password?.message}\n            state={hasKey(errors, 'password') ? 'error' : 'success'}\n            showState={!!hasKey(errors, 'password')}\n            {...register('password', {\n              required: 'Password is required',\n              minLength: {\n                value: 6,\n                message: 'Minimum length is 6',\n              },\n              // maxLength: {\n              //   value: 10,\n              //   message: 'Maximum length is 10',\n              // },\n            })}\n          />\n          <StyledSmallText>\n            Must contain at least one number, special character, uppercase and\n            lowercase letter more than 6 characters\n          </StyledSmallText>\n        </FormGroup>\n        <FormGroup mb=\"20px\">\n          <Label display=\"block\" mb=\"5px\" htmlFor=\"first_name\">\n            Firstname\n          </Label>\n          <Input\n            id=\"first_name\"\n            type=\"text\"\n            placeholder=\"Enter your firstname\"\n            feedbackText={errors?.first_name?.message}\n            state={hasKey(errors, 'first_name') ? 'error' : 'success'}\n            showState={!!hasKey(errors, 'first_name')}\n            {...register('first_name', {\n              required: 'First Name is required',\n              minLength: {\n                value: 2,\n                message: 'Minimum length is 2',\n              },\n            })}\n          />\n        </FormGroup>\n        <FormGroup mb=\"20px\">\n          <Label display=\"block\" mb=\"5px\" htmlFor=\"last_name\">\n            Lastname\n          </Label>\n          <Input\n            id=\"last_name\"\n            type=\"text\"\n            placeholder=\"Enter your Lastname\"\n            feedbackText={errors?.last_name?.message}\n            state={hasKey(errors, 'last_name') ? 'error' : 'success'}\n            showState={!!hasKey(errors, 'last_name')}\n            {...register('last_name', {\n              required: 'Last Name is required',\n              minLength: {\n                value: 2,\n                message: 'Minimum length is 2',\n              },\n            })}\n          />\n        </FormGroup>\n        <FormGroup mb=\"20px\">\n          <Text fontSize=\"12px\">\n            By clicking <strong>Create an account</strong> below, you agree to\n            our terms of service and privacy statement.\n          </Text>\n        </FormGroup>\n        <GoogleReCaptchaProvider reCaptchaKey={recaptchakey}>\n          <Button type=\"submit\" color=\"brand2\" fullwidth>\n            {signingUp ? (\n              <div className=\"spin\">\n                <Spinner size=\"xs\" color=\"light\" />\n              </div>\n            ) : (\n              'Sign Up'\n            )}\n          </Button>\n        </GoogleReCaptchaProvider>\n      </form>\n      <StyledRedirect>\n        Already registered? <Link to=\"/signin\">Sign In here</Link>\n      </StyledRedirect>\n    </StyledWrap>\n  );\n};\n\nexport default SignupForm;\n","import styled, { device } from '@sieloapp/shared/styled';\nimport { Media, MediaBody } from '@sieloapp/components';\n\nexport const StyledMedia = styled(({ ...rest }) => <Media {...rest} />)`\n  height: 100%;\n  align-items: stretch;\n  justify-content: center;\n`;\n\nexport const StyledMediaBody = styled(({ ...rest }) => <MediaBody {...rest} />)`\n  display: none;\n  ${device.large} {\n    display: flex;\n    position: relative;\n    align-items: center;\n    padding-left: 50px;\n    padding-right: 50px;\n  }\n  ${device.xlarge} {\n    padding-left: 60px;\n    padding-right: 60px;\n  }\n`;\n\nexport const StyledImage = styled.div``;\n\nexport const StyledImgText = styled.div`\n  font-size: 12px;\n  text-align: center;\n  right: 0px;\n  bottom: -10px;\n  position: absolute;\n`;\n\nexport const StyledSignin = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 340px;\n  ${device.large} {\n    margin-right: 50px;\n  }\n  ${device.xlarge} {\n    margin-right: 60px;\n  }\n`;\n","import loginImage from '@sieloapp/shared/images/knowledge-graph.webp';\nimport SignupForm from '../../components/signup-form';\nimport {\n  StyledMedia,\n  StyledMediaBody,\n  StyledImage,\n  StyledImgText,\n  StyledSignin,\n} from './style';\n\nconst AuthContainer = () => {\n  return (\n    <StyledMedia>\n      <StyledSignin>\n        <SignupForm />\n      </StyledSignin>\n      <StyledMediaBody>\n        <StyledImage>\n          <img src={loginImage} alt=\"Sign In\" />\n        </StyledImage>\n      </StyledMediaBody>\n    </StyledMedia>\n  );\n};\n\nexport default AuthContainer;\n","import Content from '../../layouts/layout-02/content';\nimport ContentHeader from '../../layouts/layout-02/content-header';\nimport ContentBody from '../../layouts/layout-02/content-body';\nimport AuthContainer from '../../containers/signup';\nimport SEO from '../../components/seo';\n\nconst SignUp = () => {\n  return (\n    <>\n      <SEO />\n      <Content fullHeight>\n        <ContentHeader />\n        <ContentBody>\n          <AuthContainer />\n        </ContentBody>\n      </Content>\n    </>\n  );\n};\n\nexport default SignUp;\n"],"names":["StyledWrap","styled","div","_templateObject","_taggedTemplateLiteral","StyledTitle","h3","_templateObject2","themeGet","StyledDesc","p","_templateObject3","StyledSmallText","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_errors$email","_errors$password","_errors$first_name","_errors$last_name","_useState","useState","_useState2","_slicedToArray","msg","setMessage","_useState3","_useState4","signingUp","setsigningUp","navigate","useNavigate","dispatch","useDispatch","_useForm","useForm","register","handleSubmit","errors","formState","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","signUpResponse","typedError","wrap","_context","prev","next","console","log","Auth","signUp","username","email","password","attributes","name","first_name","family_name","last_name","sent","toggleUser","userName","firstName","lastName","role","token","userSub","company","undefined","verified","userConfirmed","clientId","process","userPoolId","xorCipher","t0","message","stop","_x","apply","arguments","_jsxs","children","_jsx","Alert","color","action","noValidate","FormGroup","mb","Label","display","htmlFor","Input","_objectSpread","id","type","placeholder","feedbackText","state","hasKey","showState","required","pattern","value","minLength","Text","fontSize","GoogleReCaptchaProvider","reCaptchaKey","Button","fullwidth","className","Spinner","size","StyledRedirect","Link","to","StyledMedia","rest","Object","assign","_objectDestructuringEmpty","Media","StyledMediaBody","_ref2","MediaBody","device","large","xlarge","StyledImage","StyledSignin","SignupForm","src","loginImage","alt","_Fragment","SEO","Content","fullHeight","ContentHeader","ContentBody","AuthContainer"],"sourceRoot":""}