{"version":3,"file":"static/js/174.00752b7d.chunk.js","mappings":"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","sources":["../../components/src/grid/container.tsx","components/seo.tsx","layouts/content/style.tsx","layouts/content/index.tsx","pages/profile-view.tsx"],"sourcesContent":["import { SpaceProps } from \"@sieloapp/shared/styled\";\nimport { StyledContainer } from \"./style\";\n\ninterface IProps extends SpaceProps {\n    children: React.ReactNode;\n    className?: string;\n}\n\nconst Container = ({ className, ...props }: IProps) => {\n    return <StyledContainer className={className} {...props} />;\n};\n\nexport default Container;\n","import { Helmet } from 'react-helmet';\n\ninterface IProps {\n  title?: string;\n  titleTemplate?: string;\n  description?: string;\n}\n\nconst SEO = ({ title, titleTemplate, description }: IProps) => {\n  return (\n    <Helmet>\n      <meta charSet=\"utf-8\" />\n      <title>\n        {title} - {titleTemplate}\n      </title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n  );\n};\n\nSEO.defaultProps = {\n  title: 'Data Catalog',\n  titleTemplate: 'Data Catalog',\n  description: 'Data Catalog',\n};\n\nexport default SEO;\n","import styled, {\n  device,\n  space,\n  border as borderStyle,\n  SpaceProps,\n  BorderProps,\n  css,\n  themeGet,\n} from '@sieloapp/shared/styled';\n\ninterface IProps extends SpaceProps, BorderProps {\n  $fullHeight?: boolean;\n  $flex?: boolean;\n  $align: 'top' | 'center' | 'bottom';\n}\n\nconst conentCSS = css<IProps>`\n  padding: 20px;\n  ${device.large} {\n    padding: 25px;\n    margin-top: 60px;\n  }\n  ${device.xlarge} {\n    padding: 30px;\n  }\n\n  ${({ $flex }) =>\n    $flex &&\n    css`\n      display: flex;\n      flex-direction: column;\n    `}\n\n  ${({ $fullHeight }) =>\n    $fullHeight &&\n    css`\n      min-height: calc(100vh - 107px);\n      justify-content: center;\n    `}\n\n  ${({ $align }) =>\n    $align &&\n    $align !== 'center' &&\n    css`\n      & > .container {\n        flex: 1;\n      }\n    `}\n\t${({ borderBottom, borderBottomWidth }) =>\n    (borderBottom || borderBottomWidth) &&\n    css`\n      border-bottom-style: solid;\n      border-bottom-color: ${themeGet('colors.border')};\n    `}\n    ${(props) =>\n    props.theme.name === 'dark' &&\n    css`\n      color: ${themeGet('colors.gray500')};\n    `}\n    ${space};\n  ${borderStyle};\n`;\n\nexport const StyledContent = styled(\n  ({\n    p,\n    px,\n    py,\n    m,\n    mx,\n    my,\n    mt,\n    borderBottomWidth,\n    $fullHeight,\n    $align,\n    ...rest\n  }) => <div {...rest} />,\n)<IProps>`\n  ${conentCSS}\n`;\n","import { SpaceProps, BorderProps } from '@sieloapp/shared/styled';\nimport { Container } from '@sieloapp/components';\nimport { StyledContent } from './style';\n\ninterface IProps extends SpaceProps, BorderProps {\n  children: React.ReactNode;\n  className?: string;\n  fullHeight?: boolean;\n  flex?: boolean;\n  align?: 'top' | 'center' | 'bottom';\n}\n\nconst Content = ({\n  children,\n  className,\n  fullHeight,\n  flex,\n  align,\n  ...restProps\n}: IProps) => {\n  return (\n    <StyledContent\n      $fullHeight={fullHeight}\n      $flex={flex}\n      $align={align}\n      className={className}\n      {...restProps}\n    >\n      <Container className=\"container\" pl=\"0\" pr=\"0\">\n        {children}\n      </Container>\n    </StyledContent>\n  );\n};\n\nexport default Content;\n","import { Media, MediaBody } from '@sieloapp/components';\nimport Content from '../layouts/content';\nimport LeftSidebar from '../containers/profile-view/left-sidebar';\nimport MainContent from '../containers/profile-view/main';\nimport RightSidebar from '../containers/profile-view/right-sidebar';\nimport SEO from '../components/seo';\n\nconst ProfileView = () => {\n  return (\n    <>\n      <SEO />\n      <Content p={[null, null, null, '40px 0']}>\n        <Media display={['block', null, null, 'flex']}>\n          <LeftSidebar />\n          <MediaBody\n            mt={['40px', null, null, 0]}\n            px={[null, null, null, '10px']}\n          >\n            <MainContent />\n          </MediaBody>\n          <RightSidebar />\n        </Media>\n      </Content>\n    </>\n  );\n};\n\nexport default ProfileView;\n"],"names":["_ref","className","props","_objectWithoutProperties","_excluded","_jsx","StyledContainer","_objectSpread","SEO","title","titleTemplate","description","_jsxs","Helmet","children","charSet","name","content","defaultProps","conentCSS","css","_templateObject","_taggedTemplateLiteral","device","large","xlarge","$flex","_templateObject2","_ref2","$fullHeight","_templateObject3","_ref3","$align","_templateObject4","_ref4","borderBottom","borderBottomWidth","_templateObject5","themeGet","theme","_templateObject6","space","borderStyle","StyledContent","styled","_ref5","p","px","py","m","mx","my","mt","rest","_templateObject7","fullHeight","flex","align","restProps","Container","pl","pr","_Fragment","Content","Media","display","LeftSidebar","MediaBody","MainContent","RightSidebar"],"sourceRoot":""}